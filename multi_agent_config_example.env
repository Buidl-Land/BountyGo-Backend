# ========================================
# BountyGo整合多Agent系统配置示例
# 统一配置管理 - 消除配置冗余和不同步问题
# ========================================

# 🤖 基础AI配置
PPIO_API_KEY=your-ppio-api-key-here
PPIO_BASE_URL=https://api.ppinfra.com/v3/openai

# 🎯 多Agent系统配置
MULTI_AGENT_FRAMEWORK=camel-ai
DEFAULT_MODEL_PROVIDER=ppio
MAX_CONCURRENT_AGENTS=5

# 🔧 各Agent专用模型配置
URL_PARSER_MODEL=qwen/qwen3-coder-480b-a35b-instruct        # 编程任务优化
IMAGE_ANALYZER_MODEL=baidu/ernie-4.5-vl-28b-a3b             # 视觉模型，免费
CONTENT_EXTRACTOR_MODEL=moonshotai/kimi-k2-instruct         # 通用高性能
TASK_CREATOR_MODEL=deepseek/deepseek-r1-0528                # 推理能力强
QUALITY_CHECKER_MODEL=qwen/qwen3-235b-a22b-instruct-2507    # 大参数精确
COORDINATOR_MODEL=moonshotai/kimi-k2-instruct               # 协调管理

# ⚙️ Agent性能配置
URL_PARSER_TEMPERATURE=0.1
IMAGE_ANALYZER_TEMPERATURE=0.1
CONTENT_EXTRACTOR_TEMPERATURE=0.1
TASK_CREATOR_TEMPERATURE=0.0        # 更精确的任务创建
QUALITY_CHECKER_TEMPERATURE=0.0     # 更严格的质量检查
COORDINATOR_TEMPERATURE=0.2         # 适度创造性协调

# 🤝 Workforce协作配置
WORKFORCE_SIZE=5
WORKFORCE_MODE=workforce              # 可选: workforce, role_playing, pipeline
WORKFORCE_COMMUNICATION=async
WORKFORCE_CONSENSUS_THRESHOLD=0.8
WORKFORCE_MAX_ITERATIONS=3

# ========================================
# 💡 配置模式建议
# ========================================

# 🆓 免费模式 (节省成本):
# URL_PARSER_MODEL=moonshotai/kimi-k2-instruct
# IMAGE_ANALYZER_MODEL=baidu/ernie-4.5-vl-28b-a3b
# CONTENT_EXTRACTOR_MODEL=moonshotai/kimi-k2-instruct
# TASK_CREATOR_MODEL=moonshotai/kimi-k2-instruct
# QUALITY_CHECKER_MODEL=moonshotai/kimi-k2-instruct

# 🚀 性能模式 (质量优先) - 上面的默认配置

# 📊 开发模式 (快速测试):
# 所有模型使用 moonshotai/kimi-k2-instruct
# 所有temperature设为0.2以加快响应

# ========================================
# 🔄 使用方法 (整合后)
# ========================================
# 1. 将此文件内容复制到你的 .env 文件中
# 2. 替换 your-ppio-api-key-here 为真实的API密钥
# 3. 根据需求调整模型配置
# 4. 使用统一配置管理器自动加载和验证配置

# ========================================
# 🎯 整合改进
# ========================================
# ✅ 统一配置管理 - 消除multi_agent_config.py和camel_workforce_service.py的重复
# ✅ 智能协调器 - 统一用户交互入口，自动识别输入类型
# ✅ 简化Agent创建 - 自动配置验证和错误处理
# ✅ 配置同步 - 所有组件使用相同的配置源

# 🚀 快速开始:
# python examples/integrated_multi_agent_demo.py 